1 - comments
constant c;
Select c
0, 9, 4, 1, 341242, 8248, 7, 5
5000
2 - comments
variable v;
Select v
a, b, c, d, f, g, k, i, j, p, q, e, h, m, read, l, x, while, procedure, if, statement, print, call, then, depth, steps, variable
5000
3 - comments
read r;
Select r
3, 19, 21, 24, 30, 31, 41
5000
4 - comments
print p;
Select p
9, 17, 18, 20, 25, 32, 34, 40, 42
5000
5 - comments
assign a;
Select a
26, 27, 28, 29, 33, 35, 36, 38, 39, 22, 23, 48, 50, 52
5000
6 - comments
if i;
Select i
1, 5, 6, 10, 14, 37
5000
7 - comments
while w;
Select w
2, 4, 7, 8, 11, 12, 13, 16
5000
8 - comments
stmt s;
Select s such that Follows(1, 9)
none
5000
9 - comments
stmt s;
Select s such that Follows(1, s)
30
5000
10 - comments
stmt s;
Select s such that Follows(s, 30)
1
5000
11 - comments
if i;
Select i such that Follows(i, _)
1
5000
12 - comments
print p;
Select p such that Follows(_, p)
18, 20, 25, 32, 34, 42
5000
13 - comments
stmt s; assign a;
Select s such that Follows(s, a)
21, 22, 26, 27, 28, 32, 34, 35, 38
5000
14 - comments
read r; assign a;
Select r such that Follows(r, a)
21
5000
15 - comments
stmt s;
Select s such that Follows(_, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52
5000
16 - comments
stmt s;
Select s such that Follows(1, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52
5000
17 - comments
stmt s;
Select s such that Follows(_, 31)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52
5000
18 - comments
stmt s;
Select s such that Parent(10, 25)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52
5000
19 - comments
stmt s;
Select s such that Parent(s, 5)
4
5000
20 - comments
stmt s;
Select s such that Parent(14, s)
15, 16
5000
21 - comments
if i;
Select i such that Parent(i, _)
1, 5, 6, 10, 14, 37
5000
22 - comments
while w;
Select w such that Parent(_, w)
2, 4, 7, 8, 11, 12, 13, 16
5000
23 - comments
assign a; while w;
Select w such that Parent(a, w)
none
5000
24 - comments
while w1, w2;
Select w1 such that Parent(w1, w2)
7, 11, 12
5000
25 - comments
if i; print p;
Select p such that Parent(i, p)
25, 40
5000
26 - comments
stmt s;
Select w such that Parent(15, _)
none
5000
27 - comments
while w;
Select w such that Parent(_, 5)
2, 4, 7, 8, 11, 12, 13, 16
5000
28 - comments
assign a;
Select a such that Parent(_, _)
26, 27, 28, 29, 33, 35, 36, 39, 22, 23, 38, 48, 50, 52
5000
29 - comments
while w;
Select w such that Uses(w, "j")
4, 11, 12, 13, 16
5000
30 - comments
variable v;
Select v such that Uses(11, v)
a, b, c, d, f, g, k, i, j, print, read
5000
31 - comments
procedure p;
Select p such that Uses(p, "nonExisting")
none
5000
32 - comments
variable v;
Select v such that Uses(50, v)
call, print
5000
33 - comments
assign a;
Select a such that Modifies(a, "a")
26, 33
5000
34 - comments
variable v;
Select v such that Modifies(1, v)
a, d, j, p, m, read, print
5000
35 - comments
procedure p;
Select p such that Modifies(p, "nonExisting")
none
5000
36 - comments
variable v;
Select v such that Modifies(90, v)
none
5000
37 - comments
procedure p;
Select p such that Modifies(_, "call")
none
5000
38 - comments
assign a;
Select a pattern a(_, "a")
none
5000
39 - comments
assign a;
Select a pattern a(_, "a - k")
none
5000
40 - comments
assign a;
Select a pattern a(_, _"a"_)
29
5000
41 - comments
assign a;
Select a pattern a(_, _"f%a"_)
29
5000
42 - comments
assign a;
Select a pattern a("a", _"d* k"_)
33
5000
43 - comments
assign a;
Select a pattern a("procedure", _)
36
5000
44 - comments
variable v; assign a;
Select v pattern a(v, _"k"_)
d, j, m, a, print
5000
45 - comments
variable v; assign a;
Select a pattern a(v, _)
26, 27, 28, 29, 33, 35, 36, 39, 22, 23, 38, 48, 50, 52
5000
46 - comments
stmt s; assign a;
Select s pattern a(_, _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52
5000
47 - comments
stmt a;
Select a pattern a("m", _)
none
5000
48 - comments
stmt s;
Select s such that Follows*(1, 17)
none
5000
49 - comments
stmt s;
Select s such that Follows*(s, 31)
1, 30
5000
50 - comments
assign a;
Select a such that Follows*(31, a)
33, 35, 36
5000
51 - comments
while while;
Select while such that Follows*(while, _)
none
5000
52 - comments
if if;
Select if such that Follows*(_, if)
37
5000
53 - comments
variable v;
Select v such that Follows*(_, 22)
a, b, c, d, f, g, k, i, j, p, q, e, h, m, read, l, x, while, procedure, if, statement, print, call, then, depth, steps, variable
5000
54 - comments
procedure p;
Select p such that Follows*(36, _)
procedure, raymarch, moreProc, anotherProc, procedure2, call, procedure3
5000
55 - comments
constant c;
Select c such that Follows*(_, _)
0, 9, 4, 1, 341242, 8248, 7, 5
5000
56 - comments
stmt s; while w;
Select s such that Follows*(s, w)
none
5000
57 - comments
stmt s; while w;
Select c such that Follows*(w, s)
none
5000
58 - comments
assign a;
Select a such that Parent*(9, 10)
none
5000
59 - comments
stmt if23;
Select if23 such that Parent*(1, if23)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
5000
60 - comments
stmt gr3a7;
Select gr3a7 such that Parent*(gr3a7, 17)
1, 4, 5, 6, 10, 11, 12, 13, 14, 16
5000
61 - Invalid with clause for value
procedure p;
Select p with p.value = "procedure"
none
5000
62 - Invalid with clause for varName
variable v; call c;
Select v with v.varName = c.varName
none
5000
63 - Invalid such that clause for varName, procName
variable v; call c;
Select v such that v.varName = c.procName
none
5000
64 - Invalid with clause for proc, var
stmt s; procedure p; var v;
Select p with p.procName = v.procName
none
5000
65 - Invalid such that clause for proc, var
stmt s; procedure p; var v;
Select p such that p.procName = v.varName
none
5000
66 - Valid Uses
procedure p;
Select p such that Uses (p, "print")
call, procedure3, procedure2, anotherProc, moreProc, raymarch, procedure
5000
67 - Valid Uses
procedure p;
Select p such that Uses (p, "statement")
procedure2, anotherProc, moreProc, raymarch, procedure, call
5000
68 - Invalid Uses
variable v;
Select v such that Uses (v, "statement")
none
5000
69 - Valid Calls
procedure p;
Select p such that Calls (p, "call")
procedure2
5000
70 - Valid Calls*, such that, with clause for procName
procedure p;
Select p such that Calls* (p, "procedure") with p.procName = "procedure"
none
5000
71 - Valid Calls, such that, with clause for procName
procedure p, q;
Select p such that Calls (p, q) with q.procName = "procedure"
call
5000
72 - Valid Calls*, such that, with clause for procName
procedure p, q;
Select q such that Calls* (p, q) with p.procName = "procedure"
procedure3
5000
73 - Valid Calls*, such that, with clause for procName
procedure p, q;
Select q such that Calls* (p, q) with p.procName = "procedure2"
call, procedure, procedure3
5000
74 - Invalid Calls* such that, with clause for varName
procedure p, q;
Select q such that Calls* (p, q) with p.varName = "procedure2"
none
5000
75 - Invalid Calls* such that clause
procedure p, q;
Select q such that Calls* (p, q) such that p.procName = "procedure2"
none
5000
76 - Valid Next
if ifs; while w;
Select w such that Next (ifs, w)
2, 4, 7, 11, 16
5000
77 - Valid Next pattern clause for while loop
while w; assign a;
Select w such that Next(a, w) pattern a (_, _"print"_)
16
5000
78 - Valid Next pattern clause
assign a, a1;
Select a such that Next(a, a1) pattern a1 (_, _"e"_)
27
5000
79 - Valid Next for if, else
if ifs; while w;
Select w such that Next(ifs, w)
2, 4, 7, 11, 16
5000
80 - Valid Next for if, else
if ifs, ifs1;
Select ifs1 such that Next(ifs, ifs1)
6, 10
5000
81 - Valid Next for same stmt
if ifs, ifs1;
Select ifs such that Next(ifs, ifs) with ifs.stmt# = 1
none
5000
82 - Valid Next
if ifs; stmt s;
Select s such that Next(ifs, s) with ifs.stmt# = 1
2, 4
5000
83 - Valid Next* for while loop
print p; while w;
Select w such that Next* (p, w)
4, 7, 8, 11, 12, 13, 16
5000
84 - Valid Next* for same stmt
if ifs, ifs1;
Select ifs such that Next* (ifs, ifs) with ifs.stmt# = 5
5
5000
85 - Valid Next* for same stmt, reserved variable name
print p; assign a;
Select p such that Next* (a, p) pattern a (_, _"print"_)
9, 17, 18, 20, 25, 32, 34, 40 
5000
86 - Valid Next*
call c; assign a;
Select c such that Next* (a, c) pattern a ("variable", _)
49
5000
87 - Invalid Next* with invalid variable syntax
call c; assign a;
Select c such that Next* (a, c) pattern a ("?variable", _)
none
5000
88 - Invalid Next* with invalid varName
call c; assign a;
Select c such that Next* (a, c) pattern a ("variable", _) with c.varName = "call"
none
5000
89 - Invalid Next* with invalid procName syntax
call c; assign a;
Select c such that Next* (a, c) pattern a ("variable", _) with c.procName = "?call"
none
5000
90 - Invalid Next* with variable as parameter
stmt s; variable v;
Select s such that Next* (s, v)
none
5000
91 - Invalid Next* with reserved statement type variable as parameter
stmt s; variable v;
Select s such that Next* (s, "print")
none
5000
92 - Invalid Next with variable as parameter
stmt s; variable v;
Select s such that Next (s, v)
none
5000
93 - Invalid Next with reserved statement type variable as parameter
stmt s; variable v;
Select s such that Next (s, "print")
none
5000
94 - Invalid Next with procedure as parameter
stmt s; procedure p;
Select s such that Next (s, p)
none
5000
95 - Invalid Next* with procedure as parameter
stmt s; procedure p;
Select p such that Next* (p, s)
none
5000
96 - Invalid Next with variable as both parameters
variable v, v1;
Select v such that Next (v, v1)
none
5000
97 - Invalid Call with call as both parameters
call c, c1;
Select c such that Call (c, c1)
none
5000
98 - Invalid Call* with variables as both parameters
variable v, v1;
Select v such that Call* (v, v1)
none
5000
99 - Invalid Call* with statements as parameter
stmt s, s1;
Select s such that Call* (s, s1)
none
5000
100 - Invalid Call with call as parameter
procedure p; call c;
Select c such that Call (c, p)
none
5000
101 - Invalid Call* with invalid with clause
procedure p, p1; 
Select p such that Call* (p, p1) with p1.varName = "raymarch"
none
5000
102 - Invalid Call* with invalid with clause
procedure p, p1; 
Select p with Call* (p, p1)
none
5000
103 - Invalid Call with two synonyms in one parameter
procedure p, q; 
Select p with Call (pq, _)
none
5000
104 - Invalid Call with statements as parameter
stmt s, s1;
Select s with Call (s, s1)
none
5000
105 - Invalid Call with statement numbers as parameter
stmt s;
Select s with Call (1, s)
none
5000
106 - Invalid Uses with invalid variable syntax
stmt s;
Select s such that Uses(s, "?print")
none
5000
107 - Invalid Uses with reversed parameters
stmt s;
Select s such that Uses("print", s)
none
5000
108 - Invalid Uses with statements as parameters
stmt s; print p;
Select s such that Uses (s, p)
none
5000
109 - Invalid Uses with variables as both parameters
variable v;
Select v such that Uses (v, "print")
none
5000
110 - Invalid Uses with invalid with clause
stmt s; variable v;
Select s such that Uses (s, v) with v.value = "print"
none
5000
111 - Invalid Uses with invalid with clause
stmt s; variable v;
Select s such that Uses (s, v) with v.value = "1"
none
5000
112 - Invalid Uses with invalid with clause
stmt s; variable v;
Select s such that Uses (s, v) with s.stmt# = "print"
none
5000
113 - Invalid Uses with invalid with clause
stmt s; variable v;
Select s such that Uses (s, v) with v.stmt# = "1"
none
5000
114 - Invalid Uses with procedures as both parameters
procedure p, p1;
Select p such that Uses (p, p1)
none
5000
115 - Invalid Modifies with invalid variable syntax
stmt s;
Select s such that Modifies (s, "?print")
none
5000
116 - Invalid Modifies with reversed parameters
stmt s;
Select s such that Modifies ("print", s)
none
5000
117 - Invalid Modifies with statements as parameters
stmt s; print p;
Select s such that Modifies (s, p)
none
5000
118 - Invalid Modifies with variables as parameter
variable v;
Select v such that Modifies (v, _)
none
5000
119 - Invalid Modifies with invalid with clause
stmt s; variable v;
Select s such that Modifies (s, v) with v.value = "print"
none
5000
120 - Invalid Modifies with invalid with clause
stmt s; variable v;
Select s such that Modifies (s, v) with v.value = "1"
none
5000
121 - Invalid Modifies with invalid with clause
stmt s; variable v;
Select s such that Modifies (s, v) with s.stmt# = "print"
none
5000
122 - Invalid Modifies with invalid with clause
stmt s; variable v;
Select s such that Modifies (s, v) with v.stmt# = "1"
none
5000
123 - Invalid Modifies with procedures as both parameters
procedure p, p1;
Select p such that Modifies (p, p1)
none
5000
124 - Valid Calls with wildcard
procedure p;
Select p such that Calls (p, _)
procedure, raymarch, moreProc, anotherProc, procedure2, call
5000
125 - Valid Next
stmt s;
Select s such that Calls (s, 1)
none
5000
126 - Valid Next with wildcard, Select all statements that are Next to another statement
stmt s;
Select s such that Next (_, s) 
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 49, 51
5000
127 - Valid Follows with wildcard, Select all statements that can be Followed from another statement
stmt s;
Select s such that Follows (_, s)
18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 43, 45, 46, 49, 51
5000
128 - Valid Parent with wildcard, Select all statements with Parents
stmt s;
Select s such that Parent (_, s)
2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 38, 39, 40
5000
129 - Valid Uses with wildcard, Select all statements that use a variable
stmt s;
Select s such that Uses (s, _)
1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52
5000
130 - Valid Modifies with wildcard, Select all statements that modify a variable
stmt s;
Select s such that Modifies (s, _)
1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52
5000