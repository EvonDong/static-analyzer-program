1 - random
while w; variable v;
Select w such that Parent(w, 11)
7
5000
2 - random
variable v;
Select v such that Uses ("raymarch", v)
count, steps, depth, ro, rd, dist, epsilon, apple, x
5000
3 - random
stmt s;
Select s such that Parent*(7, s)
8, 9, 10, 11, 12, 13, 14
5000
4 - random
stmt s;
Select s such that Parent(7, s)
8, 9, 10, 11, 14
5000
5 - random
stmt s;
Select s such that Modifies(s, "depth")
2, 6, 7, 11, 13, 17, 19, 20
5000
6 - random
assign a; variable v;
Select a such that Uses(a, v) pattern a(_, _"x"_)
15, 21, 22, 23, 24
5000
7 - random
assign a;
Select a pattern a(_, _"y * y + z * z"_)
none
5000
8 - random
assign a;
Select a pattern a(_, _"y * y"_)
15, 23
5000
9 - random
assign a;
Select a pattern a(_, _)
4, 5, 9, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24
5000
10 - random
while w; 
Select w such that Parent*(w, 11)
7
5000
11 - random
while w; stmt s;
Select w such that Parent*(w, s)
7, 19, 25
5000
12 - random
stmt s, s1;
Select s such that Parent*(s, s1)
7, 11, 19, 25
5000
13 - random
while a; variable v;
Select v such that Parent*(a, v)
none
5000
14 - random
read rd; variable v;
Select rd such that Parent*(rd, v)
none
5000
15 - random
print p; variable v;
Select p such that Parent*(p, v)
none
5000
16 - random
stmt s; 
Select s such that Modifies(s, "po")
2, 7, 9, 19, 20
5000
17 - random
stmt s;
Select s such that Modifies(s, "count")
2, 7, 14, 19, 20
5000
18 - random 
assign a;
Select a such that Modifies(a, "x") pattern a("x", _"x"_)
21, 23
5000
19 - random 
while w; assign a;
Select w such that Modifies(w, "x") pattern a(_, _"x"_)
19
5000
20 - random
while w; assign a;
Select w such that Modifies(w, "x") pattern a(_, "x")
none
5000
21 - No clause 
stmt s;
Select s
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26
5000
22 - No clause 
read r;
Select r
1, 6, 18
5000
23 - No clause 
print pn;
Select pn 
3, 8, 26
5000
24 - No clause 
while w;
Select w
7, 19, 25
5000
25 - No clause 
if ifs;
Select ifs
11
5000
26 - No clause 
assign a;
Select a
4, 5, 9, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24
5000
27 - No clause 
variable v;
Select v
steps, depth, ro, rd, count, po, dist, epsilon, x, y, z, p, apple, done
5000
28 - No clause 
constant c;
Select c
13, 19, 1, 2, 3
5000
29 - No clause 
procedure proc;
Select proc
main, raymarch, spheresdf, newProc
5000
30 - Follows 
print p;
Select p such that Follows(_, _)
3, 8, 26
5000
31 - Follows 
assign a;
Select a such that Follows(_, 6)
4, 5, 9, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24
5000
32 - Follows 
assign a;
Select a such that Follows(_, 4)
none
5000
33 - Follows
while w;
Select w such that Follows(6, _)
7, 19, 25
5000
34 - Follows
while w;
Select w such that Follows(3, _)
none
5000
35 - Follows
procedure proc;
Select proc such that Follows(6, 7)
main, raymarch, spheresdf, newProc
5000
36 - Follows
stmt s;
Select s such that Follows(6, 8)
none
5000
37 - Follows
assign a;
Select a such that Follows(4, a)
5
5000
38 - Follows
assign a;
Select a such that Follows(5, a)
none
5000
39 - Follows
if ifs; assign a;
Select ifs such that Follows(4, a)
11
5000
40 - Follows
if ifs; assign a;
Select ifs such that Follows(5, a)
none
5000
41 - Follows
stmt s;
Select s such that Follows(s, 6)
5
5000
42 - Follows
stmt s;
Select s such that Follows(s, 4)
none
5000
43 - Follows
constant c; stmt s;
Select c such that Follows(s, 6)
13, 19, 1, 2, 3
5000
44 - Follows 
constant c; stmt s;
Select c such that Follows(s, 4)
none
5000
45 - Follows
read r;
Select r such that Follows(_, r)
6, 18
5000
46 - Follows
print p; read r;
Select p such that Follows(_, r)
3, 8, 26
5000
47 - Follows
print p;
Select p such that Follows(p, _)
8
5000
48 - Follows
read r; print p;
Select r such that Follows(p, _)
1, 6, 18
5000
49 - Follows
stmt s; assign a;
Select s such that Follows(s, a)
4, 8, 11, 15, 16, 19, 20, 22
5000
50 - Follows
stmt s; assign a;
Select a such that Follows(s, a)
5, 9, 14, 16, 17, 21, 22, 23
5000
51 - Follows
procedure proc; stmt s; assign a;
Select proc such that Follows(s, a)
main, raymarch, spheresdf, newProc
5000
52 - Follows
stmt s;
Select s such that Follows(s, s)
none
5000
53 - FollowsStar
print p;
Select p such that Follows*(_, _)
3, 8, 26
5000
54 - FollowsStar
assign a;
Select a such that Follows*(_, 6)
4, 5, 9, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24
5000
55 - FollowsStar
assign a;
Select a such that Follows*(_, 15)
none
5000
56 - FollowsStar
while w;
Select w such that Follows*(6, _)
7, 19, 25
5000
57 - FollowsStar
while w;
Select w such that Follows*(14, _)
none
5000
58 - FollowsStar
procedure proc;
Select proc such that Follows*(6, 7)
raymarch, main, spheresdf, newProc
5000
59 - FollowsStar
stmt s;
Select s such that Follows*(6, 8)
none
5000
60 - FollowsStar
assign a;
Select a such that Follows*(15, a)
16, 17, 22, 23
5000
61 - FollowsStar
assign a;
Select a such that Follows*(21, a)
none
5000
62 - FollowsStar
while w;
Select w such that Follows*(w, 23)
19
5000
63 - FollowsStar
while w;
Select w such that Follows*(w, 10)
none
5000
64 - FollowsStar
while w;
Select w such that Follows*(5, w)
7
5000
65 - FollowsStar
while w;
Select w such that Follows*(10, w)
none
5000
66 - FollowsStar
stmt s;
Select s such that Follows*(s, 19)
15, 16, 17, 18
5000
67 - FollowsStar
stmt s;
Select s such that Follows*(s, 8)
none
5000
68 - FollowsStar
constant c; stmt s;
Select c such that Follows*(s, 6)
13, 19, 2, 1, 3
5000
69 - FollowsStar 
constant c; stmt s;
Select c such that Follows*(s, 8)
none
5000
70 - FollowsStar
read r;
Select r such that Follows*(_, r)
6, 18
5000
71 - FollowsStar
print p; read r;
Select p such that Follows*(_, r)
3, 8, 26
5000
72 - FollowsStar
print p;
Select p such that Follows*(p, _)
8
5000
73 - FollowsStar
read r; print p;
Select r such that Follows*(p, _)
1, 6, 18
5000
74 - FollowsStar
while w; assign a;
Select a such that Follows*(a, w)
4, 5, 15, 16, 17, 24
5000
75 - FollowsStar
while w; assign a;
Select w such that Follows*(a, w)
7, 19, 25
5000
76 - FollowsStar
procedure proc; while w; assign a;
Select proc such that Follows*(a, w)
main, raymarch, spheresdf, newProc
5000
77 - FollowsStar
stmt s;
Select s such that Follows*(s, s)
none
5000
78 - Parent
print p;
Select p such that Parent(_, _)
3, 8, 26
5000
79 - Parent
assign a;
Select a such that Parent(_, 8)
4, 5, 9, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24
5000
80 - Parent
assign a;
Select a such that Parent(_, 7)
none
5000
81 - Parent
while w;
Select w such that Parent(7, _)
7, 19, 25
5000
82 - Parent
while w;
Select w such that Parent(8, _)
none
5000
83 - Parent
procedure proc;
Select proc such that Parent(7, 8)
raymarch, main, spheresdf, newProc
5000
84 - Parent
stmt s;
Select s such that Parent(8, 7)
none
5000
85 - Parent
assign a;
Select a such that Parent(7, a)
9, 14
5000
86 - Parent
assign a;
Select a such that Parent(8, a)
none
5000
87 - Parent
if ifs; assign a;
Select ifs such that Parent(7, a)
11
5000
88 - Parent
if ifs; assign a;
Select ifs such that Parent(8, a)
none
5000
89 - Parent
stmt s;
Select s such that Parent(s, 8)
7
5000
90 - Parent
stmt s;
Select s such that Parent(s, 7)
none
5000
91 - Parent
constant c; stmt s;
Select c such that Parent(s, 8)
13, 19, 2, 1, 3
5000
92 - Parent
constant c; stmt s;
Select c such that Parent(s, 7)
none
5000
93 - Parent
stmt s;
Select s such that Parent(_, s)
8, 9, 10, 11, 12, 13, 14, 20, 21, 26
5000
94 - Parent
print p; stmt s;
Select p such that Parent(_, s)
3, 8, 26
5000
95 - Parent
stmt s;
Select s such that Parent(s, _)
7, 11, 19, 25
5000
96 - Parent
read r; stmt s;
Select r such that Parent(s, _)
1, 6, 18
5000
97 - Parent
while w; assign a;
Select w such that Parent(w, a)
7, 19
5000
98 - Parent
while w; assign a;
Select a such that Parent(w, a)
9, 14, 21
5000
99 - Parent
procedure proc; while w; assign a;
Select proc such that Parent(w, a)
raymarch, spheresdf, main, newProc
5000
100 - Parent
stmt s;
Select s such that Parent(s, s)
none
5000
101 - ParentStar
print p;
Select p such that Parent*(_, _)
3, 8, 26
5000
102 - ParentStar
assign a;
Select a such that Parent*(_, 8)
4, 5, 9, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24
5000
103 - ParentStar
assign a;
Select a such that Parent*(_, 7)
none
5000
104 - ParentStar
while w;
Select w such that Parent*(7, _)
7, 19, 25
5000
105 - ParentStar
while w;
Select w such that Parent*(8, _)
none
5000
106 - ParentStar
while w;
Select w such that Parent*(7, 9)
7, 19, 25
5000
107 - ParentStar
while w;
Select w such that Parent*(9, 7)
none
5000
108 - ParentStar
assign a;
Select a such that Parent*(7, a)
9, 12, 13, 14
5000
109 - ParentStar
assign a;
Select a such that Parent*(8, a)
none
5000
110 - ParentStar
if ifs; assign a;
Select ifs such that Parent*(7, a)
11
5000
111 - ParentStar
if ifs; assign a;
Select ifs such that Parent*(8, a)
none
5000
112 - ParentStar
if ifs;
Select ifs such that Parent*(ifs, 12)
11
5000
113 - ParentStar
if ifs;
Select ifs such that Parent*(ifs, 7)
none
5000
114 - ParentStar
constant c; if ifs;
Select c such that Parent*(ifs, 12)
13, 19, 2, 1, 3
5000
115 - ParentStar
constant c; if s;
Select c such that Parent*(ifs, 7)
none
5000
116 - ParentStar
stmt s;
Select s such that Parent*(_, s)
8, 9, 10, 11, 12, 13, 14, 20, 21, 26
5000
117 - ParentStar
print p; stmt s;
Select p such that Parent*(_, s)
3, 8, 26
5000
118 - ParentStar
stmt s;
Select s such that Parent*(s, _)
7, 11, 19, 25
5000
119 - ParentStar
read r; stmt s;
Select r such that Parent*(s, _)
1, 6, 18
5000
120 - ParentStar
while w; assign a;
Select w such that Parent*(w, a)
7, 19
5000
121 - ParentStar
while w; assign a;
Select a such that Parent*(w, a)
9, 12, 13, 14, 21
5000
122 - ParentStar
procedure proc; while w; assign a;
Select proc such that Parent(w, a)
main, raymarch, spheresdf, newProc
5000
123 - ParentStar
stmt s;
Select s such that Parent*(s, s)
none
5000
124 - Uses
constant c;
Select c such that Uses(8, "depth")
13, 19, 2, 1, 3
5000
125 - Uses
constant c;
Select c such that Uses(7, "b")
none
5000
126 - Uses
print p;
Select p such that Uses(8, _)
3, 8, 26
5000
127 - Uses
print p;
Select p such that Uses(1, _)
none
5000
128 - Uses
variable v;
Select v such that Uses(9, v)
ro, rd, depth
5000
129 - Uses
read r; variable v;
Select r such that Uses(9, v)
1, 6, 18
5000
130 - Uses
assign a;
Select a such that Uses(a, "depth")
9, 12, 13, 17
5000
131 - Uses
while w; assign a;
Select w such that Uses(a, "depth")
7, 19, 25
5000
132 - Uses
if ifs;
Select ifs such that Uses(ifs, _)
11
5000
133 - Uses
while w; if ifs;
Select w such that Uses(ifs, _)
7, 19, 25
5000
134 - Uses
print pn; variable v;
Select pn such that Uses(pn, v)
3, 8, 26
5000
135 - Uses
print pn; variable v;
Select v such that Uses(pn, v)
depth, apple
5000
136 - Uses
procedure proc; print pn; variable v;
Select proc such that Uses(pn, v)
main, raymarch, spheresdf, newProc
5000
137 - Modifies
print pn;
Select pn such that Modifies(9, "po")
3, 8, 26
5000
138 - Modifies
print pn;
Select pn such that Modifies(7, "depth")
3, 8, 26
5000
139 - Modifies
assign a; 
Select a such that Modifies(12, _)
4, 5, 9, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24
5000
140 - Modifies
assign a;
Select a such that Modifies(8, _)
none
5000
141 - Modifies
variable v;
Select v such that Modifies(12, v)
done
5000
142 - Modifies
if ifs; variable v;
Select ifs such that Modifies(12, v)
11
5000
143 - Modifies
read r;
Select r such that Modifies(r, "depth")
6
5000
144 - Modifies
while w; read r;
Select w such that Modifies(r, "depth")
7, 19, 25
5000
145 - Modifies
while w;
Select w such that Modifies(w, _)
7, 19
5000
146 - Modifies 
constant c; while w;
Select c such that Modifies(w, _)
13, 19, 2, 1, 3
5000
147 - Modifies
if ifs; variable v;
Select ifs such that Modifies(ifs, v)
11
5000
148 - Modifies
if ifs; variable v;
Select v such that Modifies(ifs, v)
done, depth
5000
149 - Modifies
procedure proc; if ifs; variable v;
Select proc such that Modifies(ifs, v)
main, raymarch, spheresdf, newProc
5000
150 - Pattern
assign a;
Select a pattern a (_, _)
4, 5, 9, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24
5000
151 - Pattern
assign a;
Select a pattern a ("po", _)
9
5000
152 - Pattern 
stmt s; assign a;
Select s pattern a ("po", _)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26
5000
153 - Pattern
assign a;
Select a pattern a (_, "depth+dist")
13
5000
154 - Pattern
assign a;
Select a pattern a (_, "   depth   +   dist   ")
13
5000
155 - Pattern
assign a;
Select a pattern a (_, _"x"_)
15, 21, 22, 23, 24
5000
156 - Pattern 
constant c; assign a;
Select c pattern a (_, _"x"_)
13, 19, 2, 1, 3
5000
157 - Pattern
assign a;
Select a pattern a ("po", _"depth - 2"_)
none
5000
158 - Pattern
assign a;
Select a pattern a ("x", _"dist / x"_)
21
5000
159 - Pattern
constant c; assign a;
Select c pattern a ("x", _"dist"_)
13, 19, 2, 1, 3
5000
160 - Pattern
assign a; variable v;
Select a pattern a (v, _)
4, 5, 9, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24
5000
161 - Pattern
assign a; variable v;
Select v pattern a (v, _)
ro, rd, po, done, depth, count, x, dist, apple
5000
162 - Pattern
procedure proc; assign a; variable v;
Select proc pattern a (v, _)
main, raymarch, spheresdf, newProc
5000
163 - Pattern
assign a; variable v;
Select a pattern a (v, _"x"_)
15, 21, 22, 23, 24
5000
164 - Pattern
assign a; variable v;
Select v pattern a (v, _"x"_)
dist, x, apple
5000
165 - Pattern
procedure proc; assign a; variable v;
Select proc pattern a (v, _"x"_)
main, raymarch, spheresdf, newProc
5000
166 - Follows and Pattern
assign a; if ifs;
Select a such that Follows (ifs, a) pattern a ("done", _"x"_)
none
5000
167 - Follows and Pattern
assign a; if ifs;
Select a such that Follows (ifs, a) pattern a ("done", _"depth"_)
none
5000
168 - Parent and Pattern
assign a; if ifs;
Select a such that Parent (ifs, a) pattern a ("done", _"depth"_)
12
5000
169 - Parent 
if ifs; assign a;
Select a such that Parent(ifs, a)
12, 13
5000
170 - 2 overlaps
assign a; variable v;
Select a such that Modifies(a, v) pattern a(v, _"x"_) 
15, 21, 22, 23, 24
5000
171 - 2 overlaps
assign a; variable v;
Select a such that Uses(a, v) pattern a(v, _)
13, 14, 17, 21, 23
5000
172 - 2 overlaps
assign a; variable v;
Select a such that Modifies(a, v) pattern a(v, _) 
4, 5, 9, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24
5000
173 - 2 overlaps
assign a; variable v;
Select a such that Modifies(a, v) pattern a(v, "x") 
none
5000
174 - Wrong identifier in with clause
assign a; procedure p;
Select a with p.procName = "p.procName"
none
5000
175 - Invalid with clause for prog_line, constant
assign a; prog_line p; constant c;
Select p with p.varName = c.varName
none
5000
176 - Valid with clause for prog_line, num
assign a; prog_line p; constant c;
Select p with p = 10
10
5000
177 - Invalid such that clause for prog_line, num
assign a; prog_line p; constant c;
Select p such that p = 10
none
5000
178 - Invalid with clause for constant, assign
assign a; prog_line p; constant c;
Select c with c.value = a
none
5000
179 - Valid with clause for constant
assign a; prog_line p; constant c;
Select c with c.value = 1
1
5000
180 - Valid with clause for non-existent constant
assign a; prog_line p; constant c;
Select c with c.value = 100
none
5000
181 - Invalid with clause for varName, num
assign a; prog_line p; variable v;
Select v with v.varName = 16
none
5000
182 - Valid with clause for varName
assign a; prog_line p; variable v; read r;
Select v with v.varName = r.varName
depth, p, steps
5000
183 - Invalid with clause for prog_line, identifier
assign a; prog_line p; variable v;
Select a with p = "INTEGER"
none
5000
184 - Invalid with clause for identifier, identifier
assign a; prog_line p; variable v;
Select a with "a" = "v"
none
5000
185 - Invalid with clause for identifier, num
assign a; prog_line p; variable v;
Select a with "v" = 1
none
5000
186 - Valid with clause for num, num
assign a; prog_line p; variable v;
Select a with -91 = p
none
5000
187 - Invalid with clause for num, diff num
assign a; prog_line p; variable v;
Select a with 1 = 10
none
5000
188 - Valid with clause for stmt#, num
assign a; prog_line p; variable v; stmt s;
Select s with s.stmt# = -1
none
5000
189 - Invalid with clause for stmt#, identifier
assign a; prog_line p; variable v; stmt s;
Select s with s.stmt# = "1"
none
5000
190 - Valid Calls
procedure p;
Select p such that Calls (p, "raymarch")
spheresdf
5000
191 - Valid Calls*
procedure p;
Select p such that Calls* (p, "newProc")
main, spheresdf, raymarch
5000
192 - Valid Calls*
procedure p;
Select p such that Calls* (p, "main")
none
5000
193 - Valid Next
while w, w1; prog_line p;
Select w such that Next(p, 8)
7, 19, 25
5000
194 - Invalid Next
while w, w1; procedure p;
Select w such that Next(p, 3)
none
5000
195 - Invalid Next*
while w, w1; procedure p; constant c;
Select w such that Next*(w, c)
none
5000
196 - Valid Next*
while w, w1; procedure p; constant c; if ifs;
Select ifs such that Next*(ifs, w)
11
5000
197 - Valid Next*
print p; call c;
Select c such that Next* (p, c)
10
5000
198 - Invalid Calls
procedure p; stmt s;
Select p such that Calls (p, s) 
none
5000
199 - Valid Modifies
procedure p;
Select p such that Modifies (p, "apple")
main, raymarch, spheresdf, newProc
5000
200 - Valid Uses
procedure p;
Select p such that Uses (p, "ro")
main, raymarch, spheresdf
5000
201 - Valid combination such that, with clause for procName
procedure p, q;
Select p such that Calls (p, q) with q.procName = "newProc" such that Modifies (p, "po")
raymarch
5000
202 - Valid combination such that, with clause for procName
procedure p, q;
Select p such that Calls (p, q) with q.procName = "newProc" such that Modifies (p, "apple")
raymarch
5000
203 - Valid Follows, combination such that, with clause
prog_line n; stmt s, s1;
Select s such that Follows (s, n) with n=10
9
5000
204 - Valid Calls, combination such that, with clause for procName
procedure p, p1;
Select p such that Calls (p, p1) with p1.procName = "raymarch"
spheresdf
5000
205 - Valid Next*, combination such that, with clause
print p; prog_line n;
Select p such that Next* (n, p) with n = 1000
none
5000
206 - Valid Next*, combination such that, with clause, print input
print p; prog_line n;
Select p such that Next* (n, p) with n = 4
8
5000
207 - Invalid while pattern
while w, w1; procedure p;
Select p pattern w1(p, _)
none
5000
208 - Invalid while pattern
while w, w1; procedure p;
Select p pattern w1(w, _)
none
5000
209 - Valid while pattern
while w, w1; procedure p;
Select p pattern w1("count", _)
raymarch, main, newProc, spheresdf
5000
210 - Invalid if pattern
while w, w1; procedure p; if ifs;
Select a pattern ifs("k", _)
none
5000
211 - Valid if pattern
while w, w1; procedure p; if ifs;
Select ifs pattern ifs("dist", _, _)
11
5000
212 - Valid Next* combination such that, pattern clause that tests the while cycle
while w, w1; procedure p; constant c; if ifs; assign a; variable v;
Select a such that Next*(a, w) pattern a (v, _)
4, 5, 9, 12, 13, 14, 15, 16, 17, 21, 24
5000
213 - Valid Meaningless Query
while w, w1; procedure p; constant c; if ifs; assign a, a1; variable v;
Select a1 with a.stmt# = 12
4, 5, 9, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24
5000
214 - Invalid Meaningless Query
while w, w1; procedure p; constant c; if ifs; assign a, a1; variable v;
Select a1 with a.stmt# = "count"
none
5000
215 - Valid Next* with pattern clause
read r; assign a;
Select r such that Next* (r, a) pattern (_, "x * x + y * y + z * z")
none
5000
216 - Valid Next*
read r; print p;
Select r such that Next* (r, p)
1, 6
5000
217 - Valid Next* with pattern clause
print p; assign a;
Select p such that Next* (p, a) pattern a (_,  _"count"_)
8
5000
218 - Invalid Next Query with procedure as first param
procedure p;
Select p such that Next(p, 4)
none
5000
219 - Invalid Next Query with procedure as second param
procedure p;
Select p such that Next(_, p)
none
5000
220 - Invalid Next* Query with procedure as first param
procedure p;
Select p such that Next*(p, 4)
none
5000
221 - Invalid Next* Query with procedure as second param
procedure p;
Select p such that Next*(_, p)
none
5000
222 - Invalid Next Query with two synonyms in one parameter
procedure p, q;
Select p such that Next(pq, _)
none
5000
223 - Invalid Next Query with variable one parameter
variable v;
Select v such that Next(4, v)
none
5000
224 - Invalid Next Query spelling error
assign a;
Select a such that Nexxt(4, _)
none
5000
225 - Invalid Calls Query with statement instead of procedures
assign a; read re; procedure p;
Select p such that Calls(a, re)
none
5000
226 - Invalid Calls* Query with statement instead of procedures
assign a; read re; procedure p;
Select p such that Calls*(a, re)
none
5000
227 - Invalid Calls* Query with statement instead of procedures
assign a; read re; procedure p;
Select p such that Calls*(re, a)
none
5000
228 - Invalid Calls* Query with two synonyms in one parameter
procedure p, q;
Select p such that Calls*(pq, _)
none
5000
229 - Invalid Calls Query with two synonyms in one parameter
procedure p, q;
Select p such that Calls*(_, pq)
none
5000
230 - Invalid Calls Query with statement number in parameter.
procedure p, q;
Select p such that Calls(p, 4)
none
5000
231 - Invalid Calls* Query with statement number in parameter.
procedure p, q;
Select p such that Calls*(4, p)
none
5000
232 - Invalid Calls* Query with invalid procedure syntax.
procedure p;
Select p such that Calls*("?r4ymarch", p)
none
5000
233 - Invalid Calls Query with variable as parameter.
procedure p; variable v;
Select p such that Calls(p, v)
none
5000
234 - Invalid Follows Query with variable as parameter.
stmt s; variable v;
Select s such that Follows (s, v)
none
5000
235 - Invalid Follows Query with procedure as parameter.
stmt s; procedure p;
Select s such that Follows (s, p)
none
5000
236 - Invalid Follows Query with invalid with clause.
stmt s, s1;
Select s such that Follows (s, s1) with s1.procName = "?"
none
5000
237 - Invalid Follows Query with procedures as parameter.
procedure p, p1;
Select p such that Follows (p, p1)
none
5000
238 - Invalid Follows Query with variable as parameter.
stmt s;
Select s such that Follows (s, "?")
none
5000
239 - Invalid Follows* Query with invalid with clause
stmt s, s1;
Select s with Follows* (s, s1)
none
5000
240 - Invalid Follows* Query with invalid pattern clause
assign a; stmt s;
Select s such that Follows* (s, a) pattern a ("?v4r14bl3", _)
none
5000
241 - Invalid Follows Query with invalid pattern clause
assign a; stmt s;
Select s such that Follows (a, s) pattern a ("?v4r14bl3", _)
none
5000
242 - Invalid Parent Query with variable as parameter.
stmt s; variable v;
Select s such that Parent (s, "print")
none
5000
243 - Invalid Parent Query with procedure as parameter.
stmt s; procedure p;
Select s such that Parent (s, p)
none
5000
244 - Invalid Parent Query with invalid with clause.
stmt s, s1;
Select s such that Parent (s, s1) with s1.procName = "?"
none
5000
245 - Invalid Parent Query with procedures as parameter.
procedure p, p1;
Select p such that Parent (p, p1)
none
5000
246 - Invalid Parent* Query with invalid with clause
stmt s, s1;
Select s with Parent* (s, s1)
none
5000
247 - Invalid Parent* Query with invalid pattern clause
assign a; stmt s;
Select s such that Parent* (s, a) pattern a ("?v4r14bl3", _)
none
5000
248 - Invalid Parent Query with invalid pattern clause
assign a; stmt s;
Select s such that Parent (a, s) pattern a ("?v4r14bl3", _)
none
5000
249 - Invalid Parent* Query with valid pattern clause and invalid with clause
assign a; stmt s;
Select s such that Parent (a, s) pattern a (_, _) with s.stmt# = "assign"
none
5000
250 - Invalid Parent Query with invalid with clause
stmt s, s1;
Select s such that Parent (s, s1) with s.value = 1
none
5000
251 - Invalid Parent* Query with invalid with clause
stmt s, s1;
Select s such that Parent (s, s1) with s.varName = 1
none
5000
251 - Invalid Uses Query with invalid procedure syntax and with clause
procedure p; variable v;
Select p such that Uses (p, v) with p.procName = "?r4ym4rch"
none
5000
252 - Invalid Uses Query with invalid procedure syntax as parameter
procedure p; variable v;
Select p such that Uses ("?r4ym4rch", v)
none
5000
253 - Invalid Uses Query with invalid with clause
stmt s; variable v;
Select s such that Uses (s, v) with s.value = 1
none
5000
254 - Invalid Uses Query with statement as both parameters
stmt s, s1;
Select s such that Uses (s, s1)
none
5000
255 - Invalid Uses Query with variables as both parameters
variable v, v1;
Select v such that Uses (v, v1)
none
5000
256 - Invalid Uses Query with procedures as both parameters
procedure p, p1;
Select p such that Uses (p, p1)
none
5000
257 - Invalid Uses Query with inverted parameters
procedure p; variable v;
Select p such that Uses (v, p)
none
5000
258 - Invalid Uses Query with inverted parameters
stmt s; variable v;
Select s such that Uses (v, s)
none
5000
259 - Invalid Modifies Query with invalid procedure syntax and with clause
procedure p; variable v;
Select p such that Modifies (p, v) with p.procName = "?raymarch"
none
5000
260 - Invalid Modifies Query with invalid procedure syntax as parameter
procedure p; variable v;
Select p such that Modifies ("?raymarch", v)
none
5000
261 - Invalid Modifies Query with invalid with clause
stmt s; variable v;
Select s such that Modifies (s, v) with s.value = 1
none
5000
262 - Invalid Modifies Query with statement as both parameters
stmt s, s1;
Select s such that Modifies (s, s1)
none
5000
263 - Invalid Modifies Query with variables as both parameters
variable v, v1;
Select v such that Modifies (v, v1)
none
5000
264 - Invalid Modifies Query with procedures as both parameters
procedure p, p1;
Select p such that Modifies (p, p1)
none
5000
265 - Invalid Modifies Query with inverted parameters
procedure p; variable v;
Select p such that Modifies (v, p)
none
5000
266 - Invalid Modifies Query with inverted parameters
stmt s; variable v;
Select s such that Modifies (v, s)
none
5000
267 - Invalid Modifies Query with calls as both parameters
call c, c1;
Select c such that Modifies (c, c1)
none
5000
268 - Invalid Modifies Query with call and procedure as parameters
call c; procedure p;
Select c such that Modifies (c, p)
none
5000
269 - Invalid Uses Query with call and procedure as parameters
call c; procedure p;
Select c such that Uses (c, p)
none
5000
